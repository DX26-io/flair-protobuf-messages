syntax = "proto3";

package messages.reports;

option java_package = "com.flair.bi.messages.report";
option java_multiple_files = true;

import "Report.proto";

message ScheduleReportRequest {
    ScheduleReport report = 1;
}

message DeleteScheduledReportRequest {
    string visualizationId = 1;
}

message GetScheduledReportRequest {
    string visualizationId = 1;
}

message ScheduleReportResponse {
    ScheduleReport report = 1;
    string message = 2;
}

message RepUserReq {
    string username = 1;
    int32 pageSize = 2;
    int32 page = 3;
}
message RepUserResp {
    repeated ScheduleReport reports = 1;
    string message = 2;
}

message RepUserCountReq {
    string username = 1;
}

message RepUserCountResp {
    int32 totalReports = 1;
}

message ExecuteReportRequest {
    string visualizationId = 1;
}

message ExecuteReportResponse {

}

message GetScheduleReportLogsRequest {
    string visualizationId = 1;
    int32 pageSize = 2;
    int32 page = 3;
}

message GetScheduleReportLogsResponse {
    int32 totalRecords = 1;
    repeated ReportLog SchedulerLogs = 2;
    string message = 3;
}

message SearchReportsRequest {
    string username = 1;
    string reportName = 2;
    string startDate = 3;
    string endDate = 4;
    int32 pageSize = 5;
    int32 page = 6;
}

message SearchReportsResponse {
    int32 totalRecords = 1;
    repeated ScheduleReport records = 2;
}

message GetChannelPropertiesRequest {
    
}

message GetChannelPropertiesResponse {
   repeated ChannelConnection request = 1; 
}

message AddTeamConfigsRequest {
    TeamConfig team_config = 1;
}

message AddTeamConfigsResponse {
    string message = 1;
}

message AddEmailConfigsRequest {
    EmailConfig email_config = 1;
}

message AddEmailConfigsResponse {
    string message = 1;
}

message GetEmailConfigRequest {
   
}

message GetEmailConfigResponse {
    EmailConfigList records = 1;
}

message GetTeamConfigRequest {
   
}

message GetTeamConfigResponse {
    TeamConfigList records = 1;
}

message UpdateTeamWebhookURLRequest{
    TeamConfig team_config = 1;
}

message UpdateTeamWebhookURLResponse{
    string message = 1;
}

message UpdateEmailSMTPRequest{
    EmailConfig email_config = 1;
}

message UpdateEmailSMTPResponse{
    string message = 1;
}

message DeleteChannelConfigRequest{
    string id = 1;
}

message DeleteChannelConfigResponse{
    string message = 1;
}

service ReportService {
    rpc GetScheduledReport(GetScheduledReportRequest) returns (ScheduleReportResponse) {};
    rpc GetAllScheduledReportsByUser(RepUserReq) returns (RepUserResp) {};
    rpc GetAllScheduledReportsCountsByUser(RepUserCountReq) returns (RepUserCountResp) {};
    rpc ScheduleReport(ScheduleReportRequest) returns (ScheduleReportResponse) {};
    rpc UpdateScheduledReport(ScheduleReportRequest) returns (ScheduleReportResponse) {};
    rpc DeleteScheduledReport(DeleteScheduledReportRequest) returns (ScheduleReportResponse) {};
    rpc ExecuteReport(ExecuteReportRequest) returns (ExecuteReportResponse) {};
    rpc GetScheduleReportLogs(GetScheduleReportLogsRequest) returns (GetScheduleReportLogsResponse) {};
    rpc SearchReports(SearchReportsRequest) returns (SearchReportsResponse) {};
    rpc GetChannelProperties(GetChannelPropertiesRequest) returns (GetChannelPropertiesResponse) {};
    rpc AddTeamConfigs(AddTeamConfigsRequest) returns (AddTeamConfigsResponse) {};
    rpc AddEmailConfigs(AddEmailConfigsRequest) returns (AddEmailConfigsResponse) {};
    rpc GetEmailConfig(GetEmailConfigRequest) returns (GetEmailConfigResponse) {};
    rpc GetTeamConfig(GetTeamConfigRequest) returns (GetTeamConfigResponse) {};
    rpc UpdateTeamWebhookURL(UpdateTeamWebhookURLRequest) returns (UpdateTeamWebhookURLResponse) {};
    rpc UpdateEmailSMTP(UpdateEmailSMTPRequest) returns (UpdateEmailSMTPResponse) {};
    rpc DeleteChannelConfig(DeleteChannelConfigRequest) returns (DeleteChannelConfigResponse) {};
}